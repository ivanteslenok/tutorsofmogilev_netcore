// <auto-generated />
using System;
using DataEntity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataEntity.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190407124246_TutorSpecializationAddDeleteRestrict")]
    partial class TutorSpecializationAddDeleteRestrict
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Cities");

                    b.HasData(
                        new { Id = 1L, Name = "Могилёв" },
                        new { Id = 2L, Name = "Минск" },
                        new { Id = 3L, Name = "Витебск" },
                        new { Id = 4L, Name = "Гомель" },
                        new { Id = 5L, Name = "Гродно" },
                        new { Id = 6L, Name = "Брест" }
                    );
                });

            modelBuilder.Entity("Data.Entities.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContactTypeId");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<long>("TutorId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("ContactTypeId");

                    b.HasIndex("TutorId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Data.Entities.ContactType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ContactTypes");

                    b.HasData(
                        new { Id = 1L, Name = "Skype" },
                        new { Id = 2L, Name = "Viber" },
                        new { Id = 3L, Name = "Email" }
                    );
                });

            modelBuilder.Entity("Data.Entities.Phone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(true);

                    b.Property<string>("Operator")
                        .HasMaxLength(30)
                        .IsUnicode(true);

                    b.Property<long>("TutorId");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("Data.Entities.Specialization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Specializations");

                    b.HasData(
                        new { Id = 1L, Name = "Репетитор для школьника" },
                        new { Id = 2L, Name = "Репетитор для студента" },
                        new { Id = 3L, Name = "Подготовка к ЦТ" }
                    );
                });

            modelBuilder.Entity("Data.Entities.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Subjects");

                    b.HasData(
                        new { Id = 1L, Name = "Математика" },
                        new { Id = 2L, Name = "Физика" },
                        new { Id = 3L, Name = "История" },
                        new { Id = 4L, Name = "Русский язык" },
                        new { Id = 5L, Name = "Химия" },
                        new { Id = 6L, Name = "Английский язык" }
                    );
                });

            modelBuilder.Entity("Data.Entities.Tutor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .IsUnicode(true);

                    b.Property<long?>("CityId");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(7,2)");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(true);

                    b.Property<string>("Education")
                        .HasMaxLength(500)
                        .IsUnicode(true);

                    b.Property<byte?>("Experience");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<bool>("IsVisible");

                    b.Property<string>("Job")
                        .HasMaxLength(500)
                        .IsUnicode(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("Patronymic")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("PhotoPath");

                    b.Property<int?>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Tutors");

                    b.HasData(
                        new { Id = 1L, Address = "Address0", CityId = 1L, Cost = 0m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 587, DateTimeKind.Local), Description = "Description0", Education = "High", Experience = (byte)0, FirstName = "FirstName0", IsVisible = true, Job = "Job0", LastName = "LastName0", Patronymic = "Patronymic0", Rating = 1 },
                        new { Id = 2L, Address = "Address1", CityId = 2L, Cost = 1m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description1", Education = "Medium", Experience = (byte)1, FirstName = "FirstName1", IsVisible = true, Job = "Job1", LastName = "LastName1", Patronymic = "Patronymic1", Rating = 2 },
                        new { Id = 3L, Address = "Address2", CityId = 3L, Cost = 2m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description2", Education = "High", Experience = (byte)2, FirstName = "FirstName2", IsVisible = true, Job = "Job2", LastName = "LastName2", Patronymic = "Patronymic2", Rating = 3 },
                        new { Id = 4L, Address = "Address3", CityId = 4L, Cost = 3m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description3", Education = "Medium", Experience = (byte)3, FirstName = "FirstName3", IsVisible = true, Job = "Job3", LastName = "LastName3", Patronymic = "Patronymic3", Rating = 4 },
                        new { Id = 5L, Address = "Address4", CityId = 5L, Cost = 4m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description4", Education = "High", Experience = (byte)4, FirstName = "FirstName4", IsVisible = true, Job = "Job4", LastName = "LastName4", Patronymic = "Patronymic4", Rating = 5 },
                        new { Id = 6L, Address = "Address5", CityId = 6L, Cost = 5m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description5", Education = "Medium", Experience = (byte)5, FirstName = "FirstName5", IsVisible = true, Job = "Job5", LastName = "LastName5", Patronymic = "Patronymic5", Rating = 1 },
                        new { Id = 7L, Address = "Address6", CityId = 1L, Cost = 6m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description6", Education = "High", Experience = (byte)6, FirstName = "FirstName6", IsVisible = true, Job = "Job6", LastName = "LastName6", Patronymic = "Patronymic6", Rating = 2 },
                        new { Id = 8L, Address = "Address7", CityId = 2L, Cost = 7m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description7", Education = "Medium", Experience = (byte)7, FirstName = "FirstName7", IsVisible = true, Job = "Job7", LastName = "LastName7", Patronymic = "Patronymic7", Rating = 3 },
                        new { Id = 9L, Address = "Address8", CityId = 3L, Cost = 8m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description8", Education = "High", Experience = (byte)8, FirstName = "FirstName8", IsVisible = true, Job = "Job8", LastName = "LastName8", Patronymic = "Patronymic8", Rating = 4 },
                        new { Id = 10L, Address = "Address9", CityId = 4L, Cost = 9m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description9", Education = "Medium", Experience = (byte)9, FirstName = "FirstName9", IsVisible = true, Job = "Job9", LastName = "LastName9", Patronymic = "Patronymic9", Rating = 5 },
                        new { Id = 11L, Address = "Address10", CityId = 5L, Cost = 10m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description10", Education = "High", Experience = (byte)10, FirstName = "FirstName10", IsVisible = true, Job = "Job10", LastName = "LastName10", Patronymic = "Patronymic10", Rating = 1 },
                        new { Id = 12L, Address = "Address11", CityId = 6L, Cost = 11m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description11", Education = "Medium", Experience = (byte)11, FirstName = "FirstName11", IsVisible = true, Job = "Job11", LastName = "LastName11", Patronymic = "Patronymic11", Rating = 2 },
                        new { Id = 13L, Address = "Address12", CityId = 1L, Cost = 12m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description12", Education = "High", Experience = (byte)12, FirstName = "FirstName12", IsVisible = true, Job = "Job12", LastName = "LastName12", Patronymic = "Patronymic12", Rating = 3 },
                        new { Id = 14L, Address = "Address13", CityId = 2L, Cost = 13m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description13", Education = "Medium", Experience = (byte)13, FirstName = "FirstName13", IsVisible = true, Job = "Job13", LastName = "LastName13", Patronymic = "Patronymic13", Rating = 4 },
                        new { Id = 15L, Address = "Address14", CityId = 3L, Cost = 14m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description14", Education = "High", Experience = (byte)14, FirstName = "FirstName14", IsVisible = true, Job = "Job14", LastName = "LastName14", Patronymic = "Patronymic14", Rating = 5 },
                        new { Id = 16L, Address = "Address15", CityId = 4L, Cost = 15m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description15", Education = "Medium", Experience = (byte)15, FirstName = "FirstName15", IsVisible = true, Job = "Job15", LastName = "LastName15", Patronymic = "Patronymic15", Rating = 1 },
                        new { Id = 17L, Address = "Address16", CityId = 5L, Cost = 16m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description16", Education = "High", Experience = (byte)16, FirstName = "FirstName16", IsVisible = true, Job = "Job16", LastName = "LastName16", Patronymic = "Patronymic16", Rating = 2 },
                        new { Id = 18L, Address = "Address17", CityId = 6L, Cost = 17m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description17", Education = "Medium", Experience = (byte)17, FirstName = "FirstName17", IsVisible = true, Job = "Job17", LastName = "LastName17", Patronymic = "Patronymic17", Rating = 3 },
                        new { Id = 19L, Address = "Address18", CityId = 1L, Cost = 18m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description18", Education = "High", Experience = (byte)18, FirstName = "FirstName18", IsVisible = true, Job = "Job18", LastName = "LastName18", Patronymic = "Patronymic18", Rating = 4 },
                        new { Id = 20L, Address = "Address19", CityId = 2L, Cost = 19m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description19", Education = "Medium", Experience = (byte)19, FirstName = "FirstName19", IsVisible = true, Job = "Job19", LastName = "LastName19", Patronymic = "Patronymic19", Rating = 5 },
                        new { Id = 21L, Address = "Address20", CityId = 3L, Cost = 20m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description20", Education = "High", Experience = (byte)20, FirstName = "FirstName20", IsVisible = true, Job = "Job20", LastName = "LastName20", Patronymic = "Patronymic20", Rating = 1 },
                        new { Id = 22L, Address = "Address21", CityId = 4L, Cost = 21m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description21", Education = "Medium", Experience = (byte)21, FirstName = "FirstName21", IsVisible = true, Job = "Job21", LastName = "LastName21", Patronymic = "Patronymic21", Rating = 2 },
                        new { Id = 23L, Address = "Address22", CityId = 5L, Cost = 22m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description22", Education = "High", Experience = (byte)22, FirstName = "FirstName22", IsVisible = true, Job = "Job22", LastName = "LastName22", Patronymic = "Patronymic22", Rating = 3 },
                        new { Id = 24L, Address = "Address23", CityId = 6L, Cost = 23m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description23", Education = "Medium", Experience = (byte)23, FirstName = "FirstName23", IsVisible = true, Job = "Job23", LastName = "LastName23", Patronymic = "Patronymic23", Rating = 4 },
                        new { Id = 25L, Address = "Address24", CityId = 1L, Cost = 24m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description24", Education = "High", Experience = (byte)24, FirstName = "FirstName24", IsVisible = true, Job = "Job24", LastName = "LastName24", Patronymic = "Patronymic24", Rating = 5 },
                        new { Id = 26L, Address = "Address25", CityId = 2L, Cost = 25m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description25", Education = "Medium", Experience = (byte)25, FirstName = "FirstName25", IsVisible = true, Job = "Job25", LastName = "LastName25", Patronymic = "Patronymic25", Rating = 1 },
                        new { Id = 27L, Address = "Address26", CityId = 3L, Cost = 26m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description26", Education = "High", Experience = (byte)26, FirstName = "FirstName26", IsVisible = true, Job = "Job26", LastName = "LastName26", Patronymic = "Patronymic26", Rating = 2 },
                        new { Id = 28L, Address = "Address27", CityId = 4L, Cost = 27m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description27", Education = "Medium", Experience = (byte)27, FirstName = "FirstName27", IsVisible = true, Job = "Job27", LastName = "LastName27", Patronymic = "Patronymic27", Rating = 3 },
                        new { Id = 29L, Address = "Address28", CityId = 5L, Cost = 28m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description28", Education = "High", Experience = (byte)28, FirstName = "FirstName28", IsVisible = true, Job = "Job28", LastName = "LastName28", Patronymic = "Patronymic28", Rating = 4 },
                        new { Id = 30L, Address = "Address29", CityId = 6L, Cost = 29m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description29", Education = "Medium", Experience = (byte)29, FirstName = "FirstName29", IsVisible = true, Job = "Job29", LastName = "LastName29", Patronymic = "Patronymic29", Rating = 5 },
                        new { Id = 31L, Address = "Address30", CityId = 1L, Cost = 30m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description30", Education = "High", Experience = (byte)30, FirstName = "FirstName30", IsVisible = true, Job = "Job30", LastName = "LastName30", Patronymic = "Patronymic30", Rating = 1 },
                        new { Id = 32L, Address = "Address31", CityId = 2L, Cost = 31m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description31", Education = "Medium", Experience = (byte)31, FirstName = "FirstName31", IsVisible = true, Job = "Job31", LastName = "LastName31", Patronymic = "Patronymic31", Rating = 2 },
                        new { Id = 33L, Address = "Address32", CityId = 3L, Cost = 32m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description32", Education = "High", Experience = (byte)32, FirstName = "FirstName32", IsVisible = true, Job = "Job32", LastName = "LastName32", Patronymic = "Patronymic32", Rating = 3 },
                        new { Id = 34L, Address = "Address33", CityId = 4L, Cost = 33m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description33", Education = "Medium", Experience = (byte)33, FirstName = "FirstName33", IsVisible = true, Job = "Job33", LastName = "LastName33", Patronymic = "Patronymic33", Rating = 4 },
                        new { Id = 35L, Address = "Address34", CityId = 5L, Cost = 34m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description34", Education = "High", Experience = (byte)34, FirstName = "FirstName34", IsVisible = true, Job = "Job34", LastName = "LastName34", Patronymic = "Patronymic34", Rating = 5 },
                        new { Id = 36L, Address = "Address35", CityId = 6L, Cost = 35m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description35", Education = "Medium", Experience = (byte)35, FirstName = "FirstName35", IsVisible = true, Job = "Job35", LastName = "LastName35", Patronymic = "Patronymic35", Rating = 1 },
                        new { Id = 37L, Address = "Address36", CityId = 1L, Cost = 36m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description36", Education = "High", Experience = (byte)36, FirstName = "FirstName36", IsVisible = true, Job = "Job36", LastName = "LastName36", Patronymic = "Patronymic36", Rating = 2 },
                        new { Id = 38L, Address = "Address37", CityId = 2L, Cost = 37m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description37", Education = "Medium", Experience = (byte)37, FirstName = "FirstName37", IsVisible = true, Job = "Job37", LastName = "LastName37", Patronymic = "Patronymic37", Rating = 3 },
                        new { Id = 39L, Address = "Address38", CityId = 3L, Cost = 38m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description38", Education = "High", Experience = (byte)38, FirstName = "FirstName38", IsVisible = true, Job = "Job38", LastName = "LastName38", Patronymic = "Patronymic38", Rating = 4 },
                        new { Id = 40L, Address = "Address39", CityId = 4L, Cost = 39m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description39", Education = "Medium", Experience = (byte)39, FirstName = "FirstName39", IsVisible = true, Job = "Job39", LastName = "LastName39", Patronymic = "Patronymic39", Rating = 5 },
                        new { Id = 41L, Address = "Address40", CityId = 5L, Cost = 40m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description40", Education = "High", Experience = (byte)40, FirstName = "FirstName40", IsVisible = true, Job = "Job40", LastName = "LastName40", Patronymic = "Patronymic40", Rating = 1 },
                        new { Id = 42L, Address = "Address41", CityId = 6L, Cost = 41m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description41", Education = "Medium", Experience = (byte)41, FirstName = "FirstName41", IsVisible = true, Job = "Job41", LastName = "LastName41", Patronymic = "Patronymic41", Rating = 2 },
                        new { Id = 43L, Address = "Address42", CityId = 1L, Cost = 42m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description42", Education = "High", Experience = (byte)42, FirstName = "FirstName42", IsVisible = true, Job = "Job42", LastName = "LastName42", Patronymic = "Patronymic42", Rating = 3 },
                        new { Id = 44L, Address = "Address43", CityId = 2L, Cost = 43m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description43", Education = "Medium", Experience = (byte)43, FirstName = "FirstName43", IsVisible = true, Job = "Job43", LastName = "LastName43", Patronymic = "Patronymic43", Rating = 4 },
                        new { Id = 45L, Address = "Address44", CityId = 3L, Cost = 44m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description44", Education = "High", Experience = (byte)44, FirstName = "FirstName44", IsVisible = true, Job = "Job44", LastName = "LastName44", Patronymic = "Patronymic44", Rating = 5 },
                        new { Id = 46L, Address = "Address45", CityId = 4L, Cost = 45m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description45", Education = "Medium", Experience = (byte)45, FirstName = "FirstName45", IsVisible = true, Job = "Job45", LastName = "LastName45", Patronymic = "Patronymic45", Rating = 1 },
                        new { Id = 47L, Address = "Address46", CityId = 5L, Cost = 46m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description46", Education = "High", Experience = (byte)46, FirstName = "FirstName46", IsVisible = true, Job = "Job46", LastName = "LastName46", Patronymic = "Patronymic46", Rating = 2 },
                        new { Id = 48L, Address = "Address47", CityId = 6L, Cost = 47m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description47", Education = "Medium", Experience = (byte)47, FirstName = "FirstName47", IsVisible = true, Job = "Job47", LastName = "LastName47", Patronymic = "Patronymic47", Rating = 3 },
                        new { Id = 49L, Address = "Address48", CityId = 1L, Cost = 48m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description48", Education = "High", Experience = (byte)48, FirstName = "FirstName48", IsVisible = true, Job = "Job48", LastName = "LastName48", Patronymic = "Patronymic48", Rating = 4 },
                        new { Id = 50L, Address = "Address49", CityId = 2L, Cost = 49m, CreateDate = new DateTime(2019, 4, 7, 15, 42, 46, 589, DateTimeKind.Local), Description = "Description49", Education = "Medium", Experience = (byte)49, FirstName = "FirstName49", IsVisible = true, Job = "Job49", LastName = "LastName49", Patronymic = "Patronymic49", Rating = 5 }
                    );
                });

            modelBuilder.Entity("Data.Entities.TutorSpecialization", b =>
                {
                    b.Property<long>("TutorId");

                    b.Property<long>("SpecializationId");

                    b.HasKey("TutorId", "SpecializationId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("TutorSpecializations");
                });

            modelBuilder.Entity("Data.Entities.TutorSubject", b =>
                {
                    b.Property<long>("TutorId");

                    b.Property<long>("SubjectId");

                    b.HasKey("TutorId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("TutorSubjects");

                    b.HasData(
                        new { TutorId = 1L, SubjectId = 1L },
                        new { TutorId = 2L, SubjectId = 2L },
                        new { TutorId = 3L, SubjectId = 3L },
                        new { TutorId = 4L, SubjectId = 4L },
                        new { TutorId = 5L, SubjectId = 5L },
                        new { TutorId = 6L, SubjectId = 6L },
                        new { TutorId = 7L, SubjectId = 1L },
                        new { TutorId = 8L, SubjectId = 2L },
                        new { TutorId = 9L, SubjectId = 3L },
                        new { TutorId = 10L, SubjectId = 4L },
                        new { TutorId = 11L, SubjectId = 5L },
                        new { TutorId = 12L, SubjectId = 6L },
                        new { TutorId = 13L, SubjectId = 1L },
                        new { TutorId = 14L, SubjectId = 2L },
                        new { TutorId = 15L, SubjectId = 3L },
                        new { TutorId = 16L, SubjectId = 4L },
                        new { TutorId = 17L, SubjectId = 5L },
                        new { TutorId = 18L, SubjectId = 6L },
                        new { TutorId = 19L, SubjectId = 1L },
                        new { TutorId = 20L, SubjectId = 2L },
                        new { TutorId = 21L, SubjectId = 3L },
                        new { TutorId = 22L, SubjectId = 4L },
                        new { TutorId = 23L, SubjectId = 5L },
                        new { TutorId = 24L, SubjectId = 6L },
                        new { TutorId = 25L, SubjectId = 1L },
                        new { TutorId = 26L, SubjectId = 2L },
                        new { TutorId = 27L, SubjectId = 3L },
                        new { TutorId = 28L, SubjectId = 4L },
                        new { TutorId = 29L, SubjectId = 5L },
                        new { TutorId = 30L, SubjectId = 6L },
                        new { TutorId = 31L, SubjectId = 1L },
                        new { TutorId = 32L, SubjectId = 2L },
                        new { TutorId = 33L, SubjectId = 3L },
                        new { TutorId = 34L, SubjectId = 4L },
                        new { TutorId = 35L, SubjectId = 5L },
                        new { TutorId = 36L, SubjectId = 6L },
                        new { TutorId = 37L, SubjectId = 1L },
                        new { TutorId = 38L, SubjectId = 2L },
                        new { TutorId = 39L, SubjectId = 3L },
                        new { TutorId = 40L, SubjectId = 4L },
                        new { TutorId = 41L, SubjectId = 5L },
                        new { TutorId = 42L, SubjectId = 6L },
                        new { TutorId = 43L, SubjectId = 1L },
                        new { TutorId = 44L, SubjectId = 2L },
                        new { TutorId = 45L, SubjectId = 3L },
                        new { TutorId = 46L, SubjectId = 4L },
                        new { TutorId = 47L, SubjectId = 5L },
                        new { TutorId = 48L, SubjectId = 6L },
                        new { TutorId = 49L, SubjectId = 1L },
                        new { TutorId = 50L, SubjectId = 2L }
                    );
                });

            modelBuilder.Entity("Data.Entities.Contact", b =>
                {
                    b.HasOne("Data.Entities.ContactType", "ContactType")
                        .WithMany("Contacts")
                        .HasForeignKey("ContactTypeId");

                    b.HasOne("Data.Entities.Tutor", "Tutor")
                        .WithMany("Contacts")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Data.Entities.Phone", b =>
                {
                    b.HasOne("Data.Entities.Tutor", "Tutor")
                        .WithMany("Phones")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Data.Entities.Tutor", b =>
                {
                    b.HasOne("Data.Entities.City", "City")
                        .WithMany("Tutors")
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("Data.Entities.TutorSpecialization", b =>
                {
                    b.HasOne("Data.Entities.Specialization", "Specialization")
                        .WithMany("TutorSpecializations")
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Entities.Tutor", "Tutor")
                        .WithMany("TutorSpecializations")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Data.Entities.TutorSubject", b =>
                {
                    b.HasOne("Data.Entities.Subject", "Subject")
                        .WithMany("TutorSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Entities.Tutor", "Tutor")
                        .WithMany("TutorSubjects")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
